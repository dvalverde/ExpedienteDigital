
@model ExpDigital.ViewModels.LibroCapituloAutor

@{
    ViewBag.Title = "CreateLibro";
}


@using (Html.BeginForm("CreateLibro", "Libro", FormMethod.Post, new { enctype = "multipart/form-data" }))// AGREGAR ESTO A TODAS LAS VIEWS QUE NO LO TENGAN
{
    @Html.AntiForgeryToken()




    <div class="content-container">

        <div class="container-fluid">
            <!--Verifico si hay un error o si se agrego un libro-->
            @if (ViewBag.libAgregado != null)
            {
                <div class="alert alert-success">
                    <strong>Libro Agregado!</strong> el libro se agregó satisfactoriamente
                </div>
            }
            @if (ViewBag.errorlib != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> No se pudo agregar el libro.
                </div>
            }
            <!-- Main component for a primary marketing message or call to action -->
            <div class="jumbotron" style="background-color: #eeeeee">
                <h1>Libros</h1>
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <form onsubmit="submitLibros">
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label for="inputEmail4">Título del Libro</label>
                            <div>
                                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="inputEmail4">Editorial</label>
                            <div>
                                @Html.EditorFor(model => model.editorial, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.editorial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-2">
                            <label for="inputEmail4">País</label>
                            <div>
                                @Html.DropDownList("id_pais", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.id_pais, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group col-md-2">
                            <label for="inputEmail4">Año</label>
                            <div>
                                @Html.EditorFor(model => model.anno, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.anno, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputState">Seleccione el número de secciones</label>
                            @Html.DropDownListFor(m => m.numeroCapitulos, Enumerable.Range(1, 100).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control col-md-8", @required = "required", @id = "selectLibros", @onclick = "selectLibros" })
                        </div>

                        <br />
                        <br />
                        <br />
                        <br />
                        <br />


                        <div class="form-row">
                            <div class="container">
                                <div class="row clearfix">
                                    <div class="col-md-12 column">
                                        <table class="table table-striped" id="tab_logic_libro" style="display:none">
                                            <thead>
                                                <tr>
                                                    <th class="text-center">
                                                        #
                                                    </th>
                                                    <th class="text-center">
                                                        Nombre del Capítulo o Sección
                                                    </th>
                                                    <th class="text-center">
                                                        Cantidad de Autores
                                                    </th>
                                                    <th class="text-center">
                                                        Información Autores
                                                    </th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{ var i_sum = 1; }
                                                @for (int i = 0; i < 100; i++)
                                                {
                                                    <tr id=@i>
                                                        <td>
                                                            @i
                                                        </td>
                                                        <td>
                                                            <!--nombre de Capitulos-->
                                                            @Html.EditorFor(model => model.capitulos[i], new { htmlAttributes = new { @class = "form-control" } })
                                                        </td>
                                                        <td rowspan='1'>
                                                            <!--botones de agregar y remover-->
                                                            <input type='button' value='Agregar Autor' id='button' class='btn btn-primary btn-sm' onclick='addNewOption(@(i))'>
                                                            <input type='button' value='Remover' id='button' class='btn btn-danger btn-sm' onclick='removeOption(@(i))'>
                                                        </td>
                                                        <td>
                                                            @for (int j = 0; j < 10; j++)
                                                            {
                                                                <div id='cap@(i_sum)autor@(j)' style="display:none">
                                                                    @Html.EditorFor(model => model.matrizAutores[i][j].nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Autor" + i_sum } })
                                                                    @Html.EditorFor(model => model.matrizAutores[i][j].correoElectronico, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo " + i_sum } })
                                                                    @Html.EditorFor(model => model.matrizDistribucion[i][j].distribucionAutoria, new { htmlAttributes = new { @class = "form-control", @placeholder = "Distrib Porcentual" } })
                                                                </div>
                                                            }
                                                            @{ i_sum += 1;}

                                                        </td>
                                                    </tr>
                                                }


                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                    <br />
                    <br />
                    <br />
                    <p class="text-info">Subir PDF:</p>
                    <div class="form-group mt-3 col-md-10">
                        <input type="file" name="upload" required />
                        @*<input type="file" id="file" name="file" value="ActionHandlerForForm" />*@
                        @* @Html.TextBoxFor(model => model.file, new { type = "file" })
                            <input type="submit" id="btnUpload" value="Upload" />*@
                    </div>


                    <br />
                    <br />

                    <p>El libro posee consejo editorial?</p>

                    <div class="custom-control custom-radio custom-control-inline">
                        @Html.RadioButtonFor(m => m.consejoEditorial, "Si", new { @class = "form-control col-md-3" })@Html.Label("Sí", new { @class = "radio-labels col-md-5" })
                        @Html.RadioButtonFor(m => m.consejoEditorial, "No", new { @class = "form-control col-md-3" })@Html.Label("No", new { @class = "radio-labels col-md-6" })
                    </div>
                    <br />
                    <br />


                    @*<button type="submit" class="btn btn-primary" onclick="aceptarAutoresLibro()" >Aceptar</button>*@
                    <button type="submit" class="btn btn-primary">Aceptar</button>
                    @*<input type="submit" value="Aceptar" class="btn btn-primary" onclick="aceptarAutoresLibro()" />*@
                </form>

            </div>

        </div>
    </div>


}