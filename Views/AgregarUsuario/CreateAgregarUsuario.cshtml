
@model ExpDigital.Models.Persona

@{
    ViewBag.Title = "CreateAgregarUsuario";
}

@using (Html.BeginForm("CreateAgregarUsuario", "AgregarUsuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="content-container">

        <div class="container-fluid">

            <!-- Main component for a primary marketing message or call to action -->

            @if (ViewBag.usuarioAgregado != null)
            {
                <div class="alert alert-success">
                    <strong>Usuario Agregado!</strong> el usuario se agregó satisfactoriamente.
                </div>
            }
            @if (ViewBag.errorUsuario != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> No se pudo agregar el usuario. @ViewBag.errorUsuario
                </div>
            }

            <div class="jumbotron" style="background-color: #eeeeee">
                <h1>Agregar Usuario</h1>
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <form>
                    <div class="form-row">

                        <div class="form-group col-md-3">
                            <label for="inputPassword4">Nombre de Usuario</label>
                            <div>
                                @Html.EditorFor(model => model.correoElectronico, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.correoElectronico, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="inputPassword4">Contraseña</label>
                            <div>
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                            <br />


                            <button type="submit" class="btn btn-primary">Enviar y Guardar</button>
                        </div>
</form>

            </div>

        </div>
    </div>

}
