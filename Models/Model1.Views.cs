//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(ExpDigital.Models.ExpedienteDigitalEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets665e2a8894cffaf8d747dde5bd7e20ec8281a51c79e0818785fb36d2bdb41084))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets665e2a8894cffaf8d747dde5bd7e20ec8281a51c79e0818785fb36d2bdb41084 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "665e2a8894cffaf8d747dde5bd7e20ec8281a51c79e0818785fb36d2bdb41084"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "ExpedienteDigitalModelStoreContainer.Articulo")
            {
                return GetView0();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.Capitulo")
            {
                return GetView1();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.CitaDeAtestados")
            {
                return GetView2();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DesarrolloSoftware")
            {
                return GetView3();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.Libro")
            {
                return GetView4();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.ObraAdministrativaDesarrollo")
            {
                return GetView5();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.ObraDidactica")
            {
                return GetView6();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.OtraObraProfesional")
            {
                return GetView7();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.Pais")
            {
                return GetView8();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.Persona")
            {
                return GetView9();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXCita")
            {
                return GetView10();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXDesarrolloSoftware")
            {
                return GetView11();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXObraAdministrativaDesarrollo")
            {
                return GetView12();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXObraDidactica")
            {
                return GetView13();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXOtraObraProfesional")
            {
                return GetView14();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.ProyectoGraduacionGalardonado")
            {
                return GetView15();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.TipoObraAdmi")
            {
                return GetView16();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.TipoObraProfesional")
            {
                return GetView17();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoArticulo")
            {
                return GetView18();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoDesarrolloSoftware")
            {
                return GetView19();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoLibro")
            {
                return GetView20();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoObraAdministrativa")
            {
                return GetView21();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoObraDidactica")
            {
                return GetView22();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoOtraObraProfesional")
            {
                return GetView23();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXArticulo")
            {
                return GetView24();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXProyectoGraduacion")
            {
                return GetView25();
            }

            if (extentName == "ExpedienteDigitalEntities.Articuloes")
            {
                return GetView26();
            }

            if (extentName == "ExpedienteDigitalEntities.Capituloes")
            {
                return GetView27();
            }

            if (extentName == "ExpedienteDigitalEntities.CitaDeAtestados")
            {
                return GetView28();
            }

            if (extentName == "ExpedienteDigitalEntities.DesarrolloSoftwares")
            {
                return GetView29();
            }

            if (extentName == "ExpedienteDigitalEntities.Libroes")
            {
                return GetView30();
            }

            if (extentName == "ExpedienteDigitalEntities.ObraAdministrativaDesarrolloes")
            {
                return GetView31();
            }

            if (extentName == "ExpedienteDigitalEntities.ObraDidacticas")
            {
                return GetView32();
            }

            if (extentName == "ExpedienteDigitalEntities.OtraObraProfesionals")
            {
                return GetView33();
            }

            if (extentName == "ExpedienteDigitalEntities.Pais")
            {
                return GetView34();
            }

            if (extentName == "ExpedienteDigitalEntities.Personas")
            {
                return GetView35();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXCitas")
            {
                return GetView36();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXDesarrolloSoftwares")
            {
                return GetView37();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXObraAdministrativaDesarrolloes")
            {
                return GetView38();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXObraDidacticas")
            {
                return GetView39();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXOtraObraProfesionals")
            {
                return GetView40();
            }

            if (extentName == "ExpedienteDigitalEntities.ProyectoGraduacionGalardonadoes")
            {
                return GetView41();
            }

            if (extentName == "ExpedienteDigitalEntities.TipoObraAdmis")
            {
                return GetView42();
            }

            if (extentName == "ExpedienteDigitalEntities.TipoObraProfesionals")
            {
                return GetView43();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoArticuloes")
            {
                return GetView44();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoDesarrolloSoftwares")
            {
                return GetView45();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoLibroes")
            {
                return GetView46();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoObraAdministrativas")
            {
                return GetView47();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoObraDidacticas")
            {
                return GetView48();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoOtraObraProfesionals")
            {
                return GetView49();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXArticulo")
            {
                return GetView50();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXProyectoGraduacion")
            {
                return GetView51();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.ObraArtistica")
            {
                return GetView52();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoObraArtistica")
            {
                return GetView53();
            }

            if (extentName == "ExpedienteDigitalEntities.ObraArtisticas")
            {
                return GetView54();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoObraArtisticas")
            {
                return GetView55();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXCapituloSec")
            {
                return GetView56();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXCapituloSecs")
            {
                return GetView57();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.PersonaXObraDeArtistica")
            {
                return GetView58();
            }

            if (extentName == "ExpedienteDigitalEntities.PersonaXObraDeArtisticas")
            {
                return GetView59();
            }

            if (extentName == "ExpedienteDigitalModelStoreContainer.DocumentoProyectoGraduacion")
            {
                return GetView60();
            }

            if (extentName == "ExpedienteDigitalEntities.DocumentoProyectoGraduacions")
            {
                return GetView61();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.Articulo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Articulo
        [ExpedienteDigitalModel.Store.Articulo](T1.Articulo_ID, T1.Articulo_titulo, T1.Articulo_numeroAutores, T1.Articulo_anno, T1.Articulo_revista, T1.[Articulo.id_pais])
    FROM (
        SELECT 
            T.ID AS Articulo_ID, 
            T.titulo AS Articulo_titulo, 
            T.numeroAutores AS Articulo_numeroAutores, 
            T.anno AS Articulo_anno, 
            T.revista AS Articulo_revista, 
            T.id_pais AS [Articulo.id_pais], 
            True AS _from0
        FROM ExpedienteDigitalEntities.Articuloes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.Capitulo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Capitulo
        [ExpedienteDigitalModel.Store.Capitulo](T1.Capitulo_ID, T1.Capitulo_titulo, T1.Capitulo_numeroAutores, T1.[Capitulo.id_libro])
    FROM (
        SELECT 
            T.ID AS Capitulo_ID, 
            T.titulo AS Capitulo_titulo, 
            T.numeroAutores AS Capitulo_numeroAutores, 
            T.id_libro AS [Capitulo.id_libro], 
            True AS _from0
        FROM ExpedienteDigitalEntities.Capituloes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.CitaDeAtestados.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CitaDeAtestados
        [ExpedienteDigitalModel.Store.CitaDeAtestados](T1.CitaDeAtestados_ID, T1.CitaDeAtestados_fechaInicio, T1.CitaDeAtestados_fechaFin, T1.CitaDeAtestados_contrasenna)
    FROM (
        SELECT 
            T.ID AS CitaDeAtestados_ID, 
            T.fechaInicio AS CitaDeAtestados_fechaInicio, 
            T.fechaFin AS CitaDeAtestados_fechaFin, 
            T.contrasenna AS CitaDeAtestados_contrasenna, 
            True AS _from0
        FROM ExpedienteDigitalEntities.CitaDeAtestados AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DesarrolloSoftware.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DesarrolloSoftware
        [ExpedienteDigitalModel.Store.DesarrolloSoftware](T1.DesarrolloSoftware_ID, T1.DesarrolloSoftware_nombre, T1.DesarrolloSoftware_numeroAutores)
    FROM (
        SELECT 
            T.ID AS DesarrolloSoftware_ID, 
            T.nombre AS DesarrolloSoftware_nombre, 
            T.numeroAutores AS DesarrolloSoftware_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalEntities.DesarrolloSoftwares AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.Libro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Libro
        [ExpedienteDigitalModel.Store.Libro](T1.Libro_ID, T1.Libro_titulo, T1.Libro_anno, T1.Libro_editorial, T1.Libro_consejoEditorial, T1.[Libro.id_pais])
    FROM (
        SELECT 
            T.ID AS Libro_ID, 
            T.titulo AS Libro_titulo, 
            T.anno AS Libro_anno, 
            T.editorial AS Libro_editorial, 
            T.consejoEditorial AS Libro_consejoEditorial, 
            T.id_pais AS [Libro.id_pais], 
            True AS _from0
        FROM ExpedienteDigitalEntities.Libroes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.ObraAdministrativaDesarrollo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraAdministrativaDesarrollo
        [ExpedienteDigitalModel.Store.ObraAdministrativaDesarrollo](T1.ObraAdministrativaDesarrollo_ID, T1.ObraAdministrativaDesarrollo_titulo, T1.ObraAdministrativaDesarrollo_numeroAutores, T1.[ObraAdministrativaDesarrollo.id_tipo])
    FROM (
        SELECT 
            T.ID AS ObraAdministrativaDesarrollo_ID, 
            T.titulo AS ObraAdministrativaDesarrollo_titulo, 
            T.numeroAutores AS ObraAdministrativaDesarrollo_numeroAutores, 
            T.id_tipo AS [ObraAdministrativaDesarrollo.id_tipo], 
            True AS _from0
        FROM ExpedienteDigitalEntities.ObraAdministrativaDesarrolloes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.ObraDidactica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraDidactica
        [ExpedienteDigitalModel.Store.ObraDidactica](T1.ObraDidactica_ID, T1.ObraDidactica_nombre, T1.ObraDidactica_numeroAutores)
    FROM (
        SELECT 
            T.ID AS ObraDidactica_ID, 
            T.nombre AS ObraDidactica_nombre, 
            T.numeroAutores AS ObraDidactica_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalEntities.ObraDidacticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.OtraObraProfesional.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OtraObraProfesional
        [ExpedienteDigitalModel.Store.OtraObraProfesional](T1.OtraObraProfesional_ID, T1.OtraObraProfesional_titulo, T1.OtraObraProfesional_numeroAutores, T1.[OtraObraProfesional.id_tipo])
    FROM (
        SELECT 
            T.ID AS OtraObraProfesional_ID, 
            T.titulo AS OtraObraProfesional_titulo, 
            T.numeroAutores AS OtraObraProfesional_numeroAutores, 
            T.id_tipo AS [OtraObraProfesional.id_tipo], 
            True AS _from0
        FROM ExpedienteDigitalEntities.OtraObraProfesionals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.Pais.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pais
        [ExpedienteDigitalModel.Store.Pais](T1.[Pais.id_pais], T1.Pais_nombre)
    FROM (
        SELECT 
            T.id_pais AS [Pais.id_pais], 
            T.nombre AS Pais_nombre, 
            True AS _from0
        FROM ExpedienteDigitalEntities.Pais AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.Persona.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Persona
        [ExpedienteDigitalModel.Store.Persona](T1.Persona_ID, T1.Persona_cedula, T1.Persona_nombre, T1.Persona_apellido1, T1.Persona_apellido2, T1.Persona_username, T1.Persona_password, T1.Persona_categoria, T1.Persona_rol)
    FROM (
        SELECT 
            T.ID AS Persona_ID, 
            T.cedula AS Persona_cedula, 
            T.nombre AS Persona_nombre, 
            T.apellido1 AS Persona_apellido1, 
            T.apellido2 AS Persona_apellido2, 
            T.username AS Persona_username, 
            T.password AS Persona_password, 
            T.categoria AS Persona_categoria, 
            T.rol AS Persona_rol, 
            True AS _from0
        FROM ExpedienteDigitalEntities.Personas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXCita.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXCita
        [ExpedienteDigitalModel.Store.PersonaXCita](T1.[PersonaXCita.id_persona_x_cita], T1.[PersonaXCita.id_persona], T1.[PersonaXCita.id_cita], T1.PersonaXCita_fechaEntrega)
    FROM (
        SELECT 
            T.id_persona_x_cita AS [PersonaXCita.id_persona_x_cita], 
            T.id_persona AS [PersonaXCita.id_persona], 
            T.id_cita AS [PersonaXCita.id_cita], 
            T.fechaEntrega AS PersonaXCita_fechaEntrega, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXCitas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXDesarrolloSoftware.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXDesarrolloSoftware
        [ExpedienteDigitalModel.Store.PersonaXDesarrolloSoftware](T1.[PersonaXDesarrolloSoftware.id_persona], T1.[PersonaXDesarrolloSoftware.id_desarrollo_software], T1.PersonaXDesarrolloSoftware_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXDesarrolloSoftware.id_persona], 
            T.id_desarrollo_software AS [PersonaXDesarrolloSoftware.id_desarrollo_software], 
            T.distribucionAutoria AS PersonaXDesarrolloSoftware_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXDesarrolloSoftwares AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXObraAdministrativaDesarrollo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraAdministrativaDesarrollo
        [ExpedienteDigitalModel.Store.PersonaXObraAdministrativaDesarrollo](T1.[PersonaXObraAdministrativaDesarrollo.id_persona], T1.[PersonaXObraAdministrativaDesarrollo.id_obra_administrativa], T1.PersonaXObraAdministrativaDesarrollo_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraAdministrativaDesarrollo.id_persona], 
            T.id_obra_administrativa AS [PersonaXObraAdministrativaDesarrollo.id_obra_administrativa], 
            T.distribucionAutoria AS PersonaXObraAdministrativaDesarrollo_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXObraAdministrativaDesarrolloes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXObraDidactica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraDidactica
        [ExpedienteDigitalModel.Store.PersonaXObraDidactica](T1.[PersonaXObraDidactica.id_persona], T1.[PersonaXObraDidactica.id_obra_didactica], T1.PersonaXObraDidactica_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraDidactica.id_persona], 
            T.id_obra_didactica AS [PersonaXObraDidactica.id_obra_didactica], 
            T.distribucionAutoria AS PersonaXObraDidactica_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXObraDidacticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXOtraObraProfesional.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXOtraObraProfesional
        [ExpedienteDigitalModel.Store.PersonaXOtraObraProfesional](T1.[PersonaXOtraObraProfesional.id_persona], T1.[PersonaXOtraObraProfesional.id_obra_profesional], T1.PersonaXOtraObraProfesional_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXOtraObraProfesional.id_persona], 
            T.id_obra_profesional AS [PersonaXOtraObraProfesional.id_obra_profesional], 
            T.distribucionAutoria AS PersonaXOtraObraProfesional_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXOtraObraProfesionals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.ProyectoGraduacionGalardonado.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProyectoGraduacionGalardonado
        [ExpedienteDigitalModel.Store.ProyectoGraduacionGalardonado](T1.ProyectoGraduacionGalardonado_ID, T1.ProyectoGraduacionGalardonado_nombre)
    FROM (
        SELECT 
            T.ID AS ProyectoGraduacionGalardonado_ID, 
            T.nombre AS ProyectoGraduacionGalardonado_nombre, 
            True AS _from0
        FROM ExpedienteDigitalEntities.ProyectoGraduacionGalardonadoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.TipoObraAdmi.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoObraAdmi
        [ExpedienteDigitalModel.Store.TipoObraAdmi](T1.TipoObraAdmi_ID, T1.TipoObraAdmi_nombre)
    FROM (
        SELECT 
            T.ID AS TipoObraAdmi_ID, 
            T.nombre AS TipoObraAdmi_nombre, 
            True AS _from0
        FROM ExpedienteDigitalEntities.TipoObraAdmis AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.TipoObraProfesional.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoObraProfesional
        [ExpedienteDigitalModel.Store.TipoObraProfesional](T1.TipoObraProfesional_ID, T1.TipoObraProfesional_nombre)
    FROM (
        SELECT 
            T.ID AS TipoObraProfesional_ID, 
            T.nombre AS TipoObraProfesional_nombre, 
            True AS _from0
        FROM ExpedienteDigitalEntities.TipoObraProfesionals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoArticulo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoArticulo
        [ExpedienteDigitalModel.Store.DocumentoArticulo](T1.DocumentoArticulo_ID, T1.DocumentoArticulo_RootDirectory, T1.DocumentoArticulo_FileName, T1.DocumentoArticulo_FileAttribute, T1.DocumentoArticulo_FileCreateDate, T1.DocumentoArticulo_FileSize, T1.DocumentoArticulo_FileStreamCol, T1.DocumentoArticulo_tipo, T1.[DocumentoArticulo.id_articulo])
    FROM (
        SELECT 
            T.ID AS DocumentoArticulo_ID, 
            T.RootDirectory AS DocumentoArticulo_RootDirectory, 
            T.FileName AS DocumentoArticulo_FileName, 
            T.FileAttribute AS DocumentoArticulo_FileAttribute, 
            T.FileCreateDate AS DocumentoArticulo_FileCreateDate, 
            T.FileSize AS DocumentoArticulo_FileSize, 
            T.FileStreamCol AS DocumentoArticulo_FileStreamCol, 
            T.tipo AS DocumentoArticulo_tipo, 
            T.id_articulo AS [DocumentoArticulo.id_articulo], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoArticuloes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoDesarrolloSoftware.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoDesarrolloSoftware
        [ExpedienteDigitalModel.Store.DocumentoDesarrolloSoftware](T1.DocumentoDesarrolloSoftware_ID, T1.DocumentoDesarrolloSoftware_RootDirectory, T1.DocumentoDesarrolloSoftware_FileName, T1.DocumentoDesarrolloSoftware_FileAttribute, T1.DocumentoDesarrolloSoftware_FileCreateDate, T1.DocumentoDesarrolloSoftware_FileSize, T1.DocumentoDesarrolloSoftware_FileStreamCol, T1.DocumentoDesarrolloSoftware_tipo, T1.[DocumentoDesarrolloSoftware.id_desarrollo_software])
    FROM (
        SELECT 
            T.ID AS DocumentoDesarrolloSoftware_ID, 
            T.RootDirectory AS DocumentoDesarrolloSoftware_RootDirectory, 
            T.FileName AS DocumentoDesarrolloSoftware_FileName, 
            T.FileAttribute AS DocumentoDesarrolloSoftware_FileAttribute, 
            T.FileCreateDate AS DocumentoDesarrolloSoftware_FileCreateDate, 
            T.FileSize AS DocumentoDesarrolloSoftware_FileSize, 
            T.FileStreamCol AS DocumentoDesarrolloSoftware_FileStreamCol, 
            T.tipo AS DocumentoDesarrolloSoftware_tipo, 
            T.id_desarrollo_software AS [DocumentoDesarrolloSoftware.id_desarrollo_software], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoDesarrolloSoftwares AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoLibro.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoLibro
        [ExpedienteDigitalModel.Store.DocumentoLibro](T1.DocumentoLibro_ID, T1.DocumentoLibro_RootDirectory, T1.DocumentoLibro_FileName, T1.DocumentoLibro_FileAttribute, T1.DocumentoLibro_FileCreateDate, T1.DocumentoLibro_FileSize, T1.DocumentoLibro_FileStreamCol, T1.DocumentoLibro_tipo, T1.[DocumentoLibro.id_libro])
    FROM (
        SELECT 
            T.ID AS DocumentoLibro_ID, 
            T.RootDirectory AS DocumentoLibro_RootDirectory, 
            T.FileName AS DocumentoLibro_FileName, 
            T.FileAttribute AS DocumentoLibro_FileAttribute, 
            T.FileCreateDate AS DocumentoLibro_FileCreateDate, 
            T.FileSize AS DocumentoLibro_FileSize, 
            T.FileStreamCol AS DocumentoLibro_FileStreamCol, 
            T.tipo AS DocumentoLibro_tipo, 
            T.id_libro AS [DocumentoLibro.id_libro], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoLibroes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoObraAdministrativa.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraAdministrativa
        [ExpedienteDigitalModel.Store.DocumentoObraAdministrativa](T1.DocumentoObraAdministrativa_ID, T1.DocumentoObraAdministrativa_RootDirectory, T1.DocumentoObraAdministrativa_FileName, T1.DocumentoObraAdministrativa_FileAttribute, T1.DocumentoObraAdministrativa_FileCreateDate, T1.DocumentoObraAdministrativa_FileSize, T1.DocumentoObraAdministrativa_FileStreamCol, T1.DocumentoObraAdministrativa_tipo, T1.[DocumentoObraAdministrativa.id_obra_administrativa])
    FROM (
        SELECT 
            T.ID AS DocumentoObraAdministrativa_ID, 
            T.RootDirectory AS DocumentoObraAdministrativa_RootDirectory, 
            T.FileName AS DocumentoObraAdministrativa_FileName, 
            T.FileAttribute AS DocumentoObraAdministrativa_FileAttribute, 
            T.FileCreateDate AS DocumentoObraAdministrativa_FileCreateDate, 
            T.FileSize AS DocumentoObraAdministrativa_FileSize, 
            T.FileStreamCol AS DocumentoObraAdministrativa_FileStreamCol, 
            T.tipo AS DocumentoObraAdministrativa_tipo, 
            T.id_obra_administrativa AS [DocumentoObraAdministrativa.id_obra_administrativa], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoObraAdministrativas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoObraDidactica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraDidactica
        [ExpedienteDigitalModel.Store.DocumentoObraDidactica](T1.DocumentoObraDidactica_ID, T1.DocumentoObraDidactica_RootDirectory, T1.DocumentoObraDidactica_FileName, T1.DocumentoObraDidactica_FileAttribute, T1.DocumentoObraDidactica_FileCreateDate, T1.DocumentoObraDidactica_FileSize, T1.DocumentoObraDidactica_FileStreamCol, T1.DocumentoObraDidactica_tipo, T1.[DocumentoObraDidactica.id_obra_didactica])
    FROM (
        SELECT 
            T.ID AS DocumentoObraDidactica_ID, 
            T.RootDirectory AS DocumentoObraDidactica_RootDirectory, 
            T.FileName AS DocumentoObraDidactica_FileName, 
            T.FileAttribute AS DocumentoObraDidactica_FileAttribute, 
            T.FileCreateDate AS DocumentoObraDidactica_FileCreateDate, 
            T.FileSize AS DocumentoObraDidactica_FileSize, 
            T.FileStreamCol AS DocumentoObraDidactica_FileStreamCol, 
            T.tipo AS DocumentoObraDidactica_tipo, 
            T.id_obra_didactica AS [DocumentoObraDidactica.id_obra_didactica], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoObraDidacticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoOtraObraProfesional.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoOtraObraProfesional
        [ExpedienteDigitalModel.Store.DocumentoOtraObraProfesional](T1.DocumentoOtraObraProfesional_ID, T1.DocumentoOtraObraProfesional_RootDirectory, T1.DocumentoOtraObraProfesional_FileName, T1.DocumentoOtraObraProfesional_FileAttribute, T1.DocumentoOtraObraProfesional_FileCreateDate, T1.DocumentoOtraObraProfesional_FileSize, T1.DocumentoOtraObraProfesional_FileStreamCol, T1.DocumentoOtraObraProfesional_tipo, T1.[DocumentoOtraObraProfesional.id_obra_profesional])
    FROM (
        SELECT 
            T.ID AS DocumentoOtraObraProfesional_ID, 
            T.RootDirectory AS DocumentoOtraObraProfesional_RootDirectory, 
            T.FileName AS DocumentoOtraObraProfesional_FileName, 
            T.FileAttribute AS DocumentoOtraObraProfesional_FileAttribute, 
            T.FileCreateDate AS DocumentoOtraObraProfesional_FileCreateDate, 
            T.FileSize AS DocumentoOtraObraProfesional_FileSize, 
            T.FileStreamCol AS DocumentoOtraObraProfesional_FileStreamCol, 
            T.tipo AS DocumentoOtraObraProfesional_tipo, 
            T.id_obra_profesional AS [DocumentoOtraObraProfesional.id_obra_profesional], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoOtraObraProfesionals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXArticulo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXArticulo
        [ExpedienteDigitalModel.Store.PersonaXArticulo](T1.[PersonaXArticulo.id_persona], T1.[PersonaXArticulo.id_articulo])
    FROM (
        SELECT 
            Key(T.Persona).ID AS [PersonaXArticulo.id_persona], 
            Key(T.Articulo).ID AS [PersonaXArticulo.id_articulo], 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXArticulo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXProyectoGraduacion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXProyectoGraduacion
        [ExpedienteDigitalModel.Store.PersonaXProyectoGraduacion](T1.[PersonaXProyectoGraduacion.id_persona], T1.[PersonaXProyectoGraduacion.id_proyecto_graduacion])
    FROM (
        SELECT 
            Key(T.Persona).ID AS [PersonaXProyectoGraduacion.id_persona], 
            Key(T.ProyectoGraduacionGalardonado).ID AS [PersonaXProyectoGraduacion.id_proyecto_graduacion], 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXProyectoGraduacion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.Articuloes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Articuloes
        [ExpedienteDigitalModel.Articulo](T1.Articulo_ID, T1.Articulo_titulo, T1.Articulo_numeroAutores, T1.Articulo_anno, T1.Articulo_revista, T1.[Articulo.id_pais])
    FROM (
        SELECT 
            T.ID AS Articulo_ID, 
            T.titulo AS Articulo_titulo, 
            T.numeroAutores AS Articulo_numeroAutores, 
            T.anno AS Articulo_anno, 
            T.revista AS Articulo_revista, 
            T.id_pais AS [Articulo.id_pais], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.Articulo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.Capituloes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Capituloes
        [ExpedienteDigitalModel.Capitulo](T1.Capitulo_ID, T1.Capitulo_titulo, T1.Capitulo_numeroAutores, T1.[Capitulo.id_libro])
    FROM (
        SELECT 
            T.ID AS Capitulo_ID, 
            T.titulo AS Capitulo_titulo, 
            T.numeroAutores AS Capitulo_numeroAutores, 
            T.id_libro AS [Capitulo.id_libro], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.Capitulo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.CitaDeAtestados.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CitaDeAtestados
        [ExpedienteDigitalModel.CitaDeAtestado](T1.CitaDeAtestado_ID, T1.CitaDeAtestado_fechaInicio, T1.CitaDeAtestado_fechaFin, T1.CitaDeAtestado_contrasenna)
    FROM (
        SELECT 
            T.ID AS CitaDeAtestado_ID, 
            T.fechaInicio AS CitaDeAtestado_fechaInicio, 
            T.fechaFin AS CitaDeAtestado_fechaFin, 
            T.contrasenna AS CitaDeAtestado_contrasenna, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.CitaDeAtestados AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DesarrolloSoftwares.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DesarrolloSoftwares
        [ExpedienteDigitalModel.DesarrolloSoftware](T1.DesarrolloSoftware_ID, T1.DesarrolloSoftware_nombre, T1.DesarrolloSoftware_numeroAutores)
    FROM (
        SELECT 
            T.ID AS DesarrolloSoftware_ID, 
            T.nombre AS DesarrolloSoftware_nombre, 
            T.numeroAutores AS DesarrolloSoftware_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DesarrolloSoftware AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.Libroes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Libroes
        [ExpedienteDigitalModel.Libro](T1.Libro_ID, T1.Libro_titulo, T1.Libro_anno, T1.Libro_editorial, T1.Libro_consejoEditorial, T1.[Libro.id_pais])
    FROM (
        SELECT 
            T.ID AS Libro_ID, 
            T.titulo AS Libro_titulo, 
            T.anno AS Libro_anno, 
            T.editorial AS Libro_editorial, 
            T.consejoEditorial AS Libro_consejoEditorial, 
            T.id_pais AS [Libro.id_pais], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.Libro AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.ObraAdministrativaDesarrolloes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraAdministrativaDesarrolloes
        [ExpedienteDigitalModel.ObraAdministrativaDesarrollo](T1.ObraAdministrativaDesarrollo_ID, T1.ObraAdministrativaDesarrollo_titulo, T1.ObraAdministrativaDesarrollo_numeroAutores, T1.[ObraAdministrativaDesarrollo.id_tipo])
    FROM (
        SELECT 
            T.ID AS ObraAdministrativaDesarrollo_ID, 
            T.titulo AS ObraAdministrativaDesarrollo_titulo, 
            T.numeroAutores AS ObraAdministrativaDesarrollo_numeroAutores, 
            T.id_tipo AS [ObraAdministrativaDesarrollo.id_tipo], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.ObraAdministrativaDesarrollo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.ObraDidacticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraDidacticas
        [ExpedienteDigitalModel.ObraDidactica](T1.ObraDidactica_ID, T1.ObraDidactica_nombre, T1.ObraDidactica_numeroAutores)
    FROM (
        SELECT 
            T.ID AS ObraDidactica_ID, 
            T.nombre AS ObraDidactica_nombre, 
            T.numeroAutores AS ObraDidactica_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.ObraDidactica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.OtraObraProfesionals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OtraObraProfesionals
        [ExpedienteDigitalModel.OtraObraProfesional](T1.OtraObraProfesional_ID, T1.OtraObraProfesional_titulo, T1.OtraObraProfesional_numeroAutores, T1.[OtraObraProfesional.id_tipo])
    FROM (
        SELECT 
            T.ID AS OtraObraProfesional_ID, 
            T.titulo AS OtraObraProfesional_titulo, 
            T.numeroAutores AS OtraObraProfesional_numeroAutores, 
            T.id_tipo AS [OtraObraProfesional.id_tipo], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.OtraObraProfesional AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.Pais.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pais
        [ExpedienteDigitalModel.Pai](T1.[Pai.id_pais], T1.Pai_nombre)
    FROM (
        SELECT 
            T.id_pais AS [Pai.id_pais], 
            T.nombre AS Pai_nombre, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.Pais AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.Personas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Personas
        [ExpedienteDigitalModel.Persona](T1.Persona_ID, T1.Persona_cedula, T1.Persona_nombre, T1.Persona_apellido1, T1.Persona_apellido2, T1.Persona_username, T1.Persona_password, T1.Persona_categoria, T1.Persona_rol)
    FROM (
        SELECT 
            T.ID AS Persona_ID, 
            T.cedula AS Persona_cedula, 
            T.nombre AS Persona_nombre, 
            T.apellido1 AS Persona_apellido1, 
            T.apellido2 AS Persona_apellido2, 
            T.username AS Persona_username, 
            T.password AS Persona_password, 
            T.categoria AS Persona_categoria, 
            T.rol AS Persona_rol, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.Persona AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXCitas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXCitas
        [ExpedienteDigitalModel.PersonaXCita](T1.[PersonaXCita.id_persona_x_cita], T1.[PersonaXCita.id_persona], T1.[PersonaXCita.id_cita], T1.PersonaXCita_fechaEntrega)
    FROM (
        SELECT 
            T.id_persona_x_cita AS [PersonaXCita.id_persona_x_cita], 
            T.id_persona AS [PersonaXCita.id_persona], 
            T.id_cita AS [PersonaXCita.id_cita], 
            T.fechaEntrega AS PersonaXCita_fechaEntrega, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXCita AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXDesarrolloSoftwares.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXDesarrolloSoftwares
        [ExpedienteDigitalModel.PersonaXDesarrolloSoftware](T1.[PersonaXDesarrolloSoftware.id_persona], T1.[PersonaXDesarrolloSoftware.id_desarrollo_software], T1.PersonaXDesarrolloSoftware_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXDesarrolloSoftware.id_persona], 
            T.id_desarrollo_software AS [PersonaXDesarrolloSoftware.id_desarrollo_software], 
            T.distribucionAutoria AS PersonaXDesarrolloSoftware_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXDesarrolloSoftware AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXObraAdministrativaDesarrolloes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraAdministrativaDesarrolloes
        [ExpedienteDigitalModel.PersonaXObraAdministrativaDesarrollo](T1.[PersonaXObraAdministrativaDesarrollo.id_persona], T1.[PersonaXObraAdministrativaDesarrollo.id_obra_administrativa], T1.PersonaXObraAdministrativaDesarrollo_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraAdministrativaDesarrollo.id_persona], 
            T.id_obra_administrativa AS [PersonaXObraAdministrativaDesarrollo.id_obra_administrativa], 
            T.distribucionAutoria AS PersonaXObraAdministrativaDesarrollo_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXObraAdministrativaDesarrollo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXObraDidacticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraDidacticas
        [ExpedienteDigitalModel.PersonaXObraDidactica](T1.[PersonaXObraDidactica.id_persona], T1.[PersonaXObraDidactica.id_obra_didactica], T1.PersonaXObraDidactica_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraDidactica.id_persona], 
            T.id_obra_didactica AS [PersonaXObraDidactica.id_obra_didactica], 
            T.distribucionAutoria AS PersonaXObraDidactica_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXObraDidactica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXOtraObraProfesionals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXOtraObraProfesionals
        [ExpedienteDigitalModel.PersonaXOtraObraProfesional](T1.[PersonaXOtraObraProfesional.id_persona], T1.[PersonaXOtraObraProfesional.id_obra_profesional], T1.PersonaXOtraObraProfesional_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXOtraObraProfesional.id_persona], 
            T.id_obra_profesional AS [PersonaXOtraObraProfesional.id_obra_profesional], 
            T.distribucionAutoria AS PersonaXOtraObraProfesional_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXOtraObraProfesional AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.ProyectoGraduacionGalardonadoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProyectoGraduacionGalardonadoes
        [ExpedienteDigitalModel.ProyectoGraduacionGalardonado](T1.ProyectoGraduacionGalardonado_ID, T1.ProyectoGraduacionGalardonado_nombre)
    FROM (
        SELECT 
            T.ID AS ProyectoGraduacionGalardonado_ID, 
            T.nombre AS ProyectoGraduacionGalardonado_nombre, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.ProyectoGraduacionGalardonado AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.TipoObraAdmis.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoObraAdmis
        [ExpedienteDigitalModel.TipoObraAdmi](T1.TipoObraAdmi_ID, T1.TipoObraAdmi_nombre)
    FROM (
        SELECT 
            T.ID AS TipoObraAdmi_ID, 
            T.nombre AS TipoObraAdmi_nombre, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.TipoObraAdmi AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.TipoObraProfesionals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoObraProfesionals
        [ExpedienteDigitalModel.TipoObraProfesional](T1.TipoObraProfesional_ID, T1.TipoObraProfesional_nombre)
    FROM (
        SELECT 
            T.ID AS TipoObraProfesional_ID, 
            T.nombre AS TipoObraProfesional_nombre, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.TipoObraProfesional AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoArticuloes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoArticuloes
        [ExpedienteDigitalModel.DocumentoArticulo](T1.DocumentoArticulo_ID, T1.DocumentoArticulo_RootDirectory, T1.DocumentoArticulo_FileName, T1.DocumentoArticulo_FileAttribute, T1.DocumentoArticulo_FileCreateDate, T1.DocumentoArticulo_FileSize, T1.DocumentoArticulo_FileStreamCol, T1.DocumentoArticulo_tipo, T1.[DocumentoArticulo.id_articulo])
    FROM (
        SELECT 
            T.ID AS DocumentoArticulo_ID, 
            T.RootDirectory AS DocumentoArticulo_RootDirectory, 
            T.FileName AS DocumentoArticulo_FileName, 
            T.FileAttribute AS DocumentoArticulo_FileAttribute, 
            T.FileCreateDate AS DocumentoArticulo_FileCreateDate, 
            T.FileSize AS DocumentoArticulo_FileSize, 
            T.FileStreamCol AS DocumentoArticulo_FileStreamCol, 
            T.tipo AS DocumentoArticulo_tipo, 
            T.id_articulo AS [DocumentoArticulo.id_articulo], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoArticulo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoDesarrolloSoftwares.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoDesarrolloSoftwares
        [ExpedienteDigitalModel.DocumentoDesarrolloSoftware](T1.DocumentoDesarrolloSoftware_ID, T1.DocumentoDesarrolloSoftware_RootDirectory, T1.DocumentoDesarrolloSoftware_FileName, T1.DocumentoDesarrolloSoftware_FileAttribute, T1.DocumentoDesarrolloSoftware_FileCreateDate, T1.DocumentoDesarrolloSoftware_FileSize, T1.DocumentoDesarrolloSoftware_FileStreamCol, T1.DocumentoDesarrolloSoftware_tipo, T1.[DocumentoDesarrolloSoftware.id_desarrollo_software])
    FROM (
        SELECT 
            T.ID AS DocumentoDesarrolloSoftware_ID, 
            T.RootDirectory AS DocumentoDesarrolloSoftware_RootDirectory, 
            T.FileName AS DocumentoDesarrolloSoftware_FileName, 
            T.FileAttribute AS DocumentoDesarrolloSoftware_FileAttribute, 
            T.FileCreateDate AS DocumentoDesarrolloSoftware_FileCreateDate, 
            T.FileSize AS DocumentoDesarrolloSoftware_FileSize, 
            T.FileStreamCol AS DocumentoDesarrolloSoftware_FileStreamCol, 
            T.tipo AS DocumentoDesarrolloSoftware_tipo, 
            T.id_desarrollo_software AS [DocumentoDesarrolloSoftware.id_desarrollo_software], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoDesarrolloSoftware AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoLibroes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoLibroes
        [ExpedienteDigitalModel.DocumentoLibro](T1.DocumentoLibro_ID, T1.DocumentoLibro_RootDirectory, T1.DocumentoLibro_FileName, T1.DocumentoLibro_FileAttribute, T1.DocumentoLibro_FileCreateDate, T1.DocumentoLibro_FileSize, T1.DocumentoLibro_FileStreamCol, T1.DocumentoLibro_tipo, T1.[DocumentoLibro.id_libro])
    FROM (
        SELECT 
            T.ID AS DocumentoLibro_ID, 
            T.RootDirectory AS DocumentoLibro_RootDirectory, 
            T.FileName AS DocumentoLibro_FileName, 
            T.FileAttribute AS DocumentoLibro_FileAttribute, 
            T.FileCreateDate AS DocumentoLibro_FileCreateDate, 
            T.FileSize AS DocumentoLibro_FileSize, 
            T.FileStreamCol AS DocumentoLibro_FileStreamCol, 
            T.tipo AS DocumentoLibro_tipo, 
            T.id_libro AS [DocumentoLibro.id_libro], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoLibro AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoObraAdministrativas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraAdministrativas
        [ExpedienteDigitalModel.DocumentoObraAdministrativa](T1.DocumentoObraAdministrativa_ID, T1.DocumentoObraAdministrativa_RootDirectory, T1.DocumentoObraAdministrativa_FileName, T1.DocumentoObraAdministrativa_FileAttribute, T1.DocumentoObraAdministrativa_FileCreateDate, T1.DocumentoObraAdministrativa_FileSize, T1.DocumentoObraAdministrativa_FileStreamCol, T1.DocumentoObraAdministrativa_tipo, T1.[DocumentoObraAdministrativa.id_obra_administrativa])
    FROM (
        SELECT 
            T.ID AS DocumentoObraAdministrativa_ID, 
            T.RootDirectory AS DocumentoObraAdministrativa_RootDirectory, 
            T.FileName AS DocumentoObraAdministrativa_FileName, 
            T.FileAttribute AS DocumentoObraAdministrativa_FileAttribute, 
            T.FileCreateDate AS DocumentoObraAdministrativa_FileCreateDate, 
            T.FileSize AS DocumentoObraAdministrativa_FileSize, 
            T.FileStreamCol AS DocumentoObraAdministrativa_FileStreamCol, 
            T.tipo AS DocumentoObraAdministrativa_tipo, 
            T.id_obra_administrativa AS [DocumentoObraAdministrativa.id_obra_administrativa], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoObraAdministrativa AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoObraDidacticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraDidacticas
        [ExpedienteDigitalModel.DocumentoObraDidactica](T1.DocumentoObraDidactica_ID, T1.DocumentoObraDidactica_RootDirectory, T1.DocumentoObraDidactica_FileName, T1.DocumentoObraDidactica_FileAttribute, T1.DocumentoObraDidactica_FileCreateDate, T1.DocumentoObraDidactica_FileSize, T1.DocumentoObraDidactica_FileStreamCol, T1.DocumentoObraDidactica_tipo, T1.[DocumentoObraDidactica.id_obra_didactica])
    FROM (
        SELECT 
            T.ID AS DocumentoObraDidactica_ID, 
            T.RootDirectory AS DocumentoObraDidactica_RootDirectory, 
            T.FileName AS DocumentoObraDidactica_FileName, 
            T.FileAttribute AS DocumentoObraDidactica_FileAttribute, 
            T.FileCreateDate AS DocumentoObraDidactica_FileCreateDate, 
            T.FileSize AS DocumentoObraDidactica_FileSize, 
            T.FileStreamCol AS DocumentoObraDidactica_FileStreamCol, 
            T.tipo AS DocumentoObraDidactica_tipo, 
            T.id_obra_didactica AS [DocumentoObraDidactica.id_obra_didactica], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoObraDidactica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoOtraObraProfesionals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoOtraObraProfesionals
        [ExpedienteDigitalModel.DocumentoOtraObraProfesional](T1.DocumentoOtraObraProfesional_ID, T1.DocumentoOtraObraProfesional_RootDirectory, T1.DocumentoOtraObraProfesional_FileName, T1.DocumentoOtraObraProfesional_FileAttribute, T1.DocumentoOtraObraProfesional_FileCreateDate, T1.DocumentoOtraObraProfesional_FileSize, T1.DocumentoOtraObraProfesional_FileStreamCol, T1.DocumentoOtraObraProfesional_tipo, T1.[DocumentoOtraObraProfesional.id_obra_profesional])
    FROM (
        SELECT 
            T.ID AS DocumentoOtraObraProfesional_ID, 
            T.RootDirectory AS DocumentoOtraObraProfesional_RootDirectory, 
            T.FileName AS DocumentoOtraObraProfesional_FileName, 
            T.FileAttribute AS DocumentoOtraObraProfesional_FileAttribute, 
            T.FileCreateDate AS DocumentoOtraObraProfesional_FileCreateDate, 
            T.FileSize AS DocumentoOtraObraProfesional_FileSize, 
            T.FileStreamCol AS DocumentoOtraObraProfesional_FileStreamCol, 
            T.tipo AS DocumentoOtraObraProfesional_tipo, 
            T.id_obra_profesional AS [DocumentoOtraObraProfesional.id_obra_profesional], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoOtraObraProfesional AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXArticulo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXArticulo
        [ExpedienteDigitalModel.PersonaXArticulo](T3.PersonaXArticulo_Articulo, T3.PersonaXArticulo_Persona)
    FROM (
        SELECT -- Constructing Articulo
            CreateRef(ExpedienteDigitalEntities.Articuloes, row(T2.PersonaXArticulo_Articulo_ID), [ExpedienteDigitalModel.Articulo]) AS PersonaXArticulo_Articulo, 
            T2.PersonaXArticulo_Persona
        FROM (
            SELECT -- Constructing Persona
                T1.PersonaXArticulo_Articulo_ID, 
                CreateRef(ExpedienteDigitalEntities.Personas, row(T1.PersonaXArticulo_Persona_ID), [ExpedienteDigitalModel.Persona]) AS PersonaXArticulo_Persona
            FROM (
                SELECT 
                    T.id_articulo AS PersonaXArticulo_Articulo_ID, 
                    T.id_persona AS PersonaXArticulo_Persona_ID, 
                    True AS _from0
                FROM ExpedienteDigitalModelStoreContainer.PersonaXArticulo AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXProyectoGraduacion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXProyectoGraduacion
        [ExpedienteDigitalModel.PersonaXProyectoGraduacion](T3.PersonaXProyectoGraduacion_Persona, T3.PersonaXProyectoGraduacion_ProyectoGraduacionGalardonado)
    FROM (
        SELECT -- Constructing Persona
            CreateRef(ExpedienteDigitalEntities.Personas, row(T2.PersonaXProyectoGraduacion_Persona_ID), [ExpedienteDigitalModel.Persona]) AS PersonaXProyectoGraduacion_Persona, 
            T2.PersonaXProyectoGraduacion_ProyectoGraduacionGalardonado
        FROM (
            SELECT -- Constructing ProyectoGraduacionGalardonado
                T1.PersonaXProyectoGraduacion_Persona_ID, 
                CreateRef(ExpedienteDigitalEntities.ProyectoGraduacionGalardonadoes, row(T1.PersonaXProyectoGraduacion_ProyectoGraduacionGalardonado_ID), [ExpedienteDigitalModel.ProyectoGraduacionGalardonado]) AS PersonaXProyectoGraduacion_ProyectoGraduacionGalardonado
            FROM (
                SELECT 
                    T.id_persona AS PersonaXProyectoGraduacion_Persona_ID, 
                    T.id_proyecto_graduacion AS PersonaXProyectoGraduacion_ProyectoGraduacionGalardonado_ID, 
                    True AS _from0
                FROM ExpedienteDigitalModelStoreContainer.PersonaXProyectoGraduacion AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.ObraArtistica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraArtistica
        [ExpedienteDigitalModel.Store.ObraArtistica](T1.ObraArtistica_ID, T1.ObraArtistica_nombre, T1.ObraArtistica_numeroAutores)
    FROM (
        SELECT 
            T.ID AS ObraArtistica_ID, 
            T.nombre AS ObraArtistica_nombre, 
            T.numeroAutores AS ObraArtistica_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalEntities.ObraArtisticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoObraArtistica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraArtistica
        [ExpedienteDigitalModel.Store.DocumentoObraArtistica](T1.DocumentoObraArtistica_ID, T1.DocumentoObraArtistica_RootDirectory, T1.DocumentoObraArtistica_FileName, T1.DocumentoObraArtistica_FileAttribute, T1.DocumentoObraArtistica_FileCreateDate, T1.DocumentoObraArtistica_FileSize, T1.DocumentoObraArtistica_FileStreamCol, T1.DocumentoObraArtistica_tipo, T1.[DocumentoObraArtistica.id_obra_artistica])
    FROM (
        SELECT 
            T.ID AS DocumentoObraArtistica_ID, 
            T.RootDirectory AS DocumentoObraArtistica_RootDirectory, 
            T.FileName AS DocumentoObraArtistica_FileName, 
            T.FileAttribute AS DocumentoObraArtistica_FileAttribute, 
            T.FileCreateDate AS DocumentoObraArtistica_FileCreateDate, 
            T.FileSize AS DocumentoObraArtistica_FileSize, 
            T.FileStreamCol AS DocumentoObraArtistica_FileStreamCol, 
            T.tipo AS DocumentoObraArtistica_tipo, 
            T.id_obra_artistica AS [DocumentoObraArtistica.id_obra_artistica], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoObraArtisticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.ObraArtisticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ObraArtisticas
        [ExpedienteDigitalModel.ObraArtistica](T1.ObraArtistica_ID, T1.ObraArtistica_nombre, T1.ObraArtistica_numeroAutores)
    FROM (
        SELECT 
            T.ID AS ObraArtistica_ID, 
            T.nombre AS ObraArtistica_nombre, 
            T.numeroAutores AS ObraArtistica_numeroAutores, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.ObraArtistica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoObraArtisticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoObraArtisticas
        [ExpedienteDigitalModel.DocumentoObraArtistica](T1.DocumentoObraArtistica_ID, T1.DocumentoObraArtistica_RootDirectory, T1.DocumentoObraArtistica_FileName, T1.DocumentoObraArtistica_FileAttribute, T1.DocumentoObraArtistica_FileCreateDate, T1.DocumentoObraArtistica_FileSize, T1.DocumentoObraArtistica_FileStreamCol, T1.DocumentoObraArtistica_tipo, T1.[DocumentoObraArtistica.id_obra_artistica])
    FROM (
        SELECT 
            T.ID AS DocumentoObraArtistica_ID, 
            T.RootDirectory AS DocumentoObraArtistica_RootDirectory, 
            T.FileName AS DocumentoObraArtistica_FileName, 
            T.FileAttribute AS DocumentoObraArtistica_FileAttribute, 
            T.FileCreateDate AS DocumentoObraArtistica_FileCreateDate, 
            T.FileSize AS DocumentoObraArtistica_FileSize, 
            T.FileStreamCol AS DocumentoObraArtistica_FileStreamCol, 
            T.tipo AS DocumentoObraArtistica_tipo, 
            T.id_obra_artistica AS [DocumentoObraArtistica.id_obra_artistica], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoObraArtistica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXCapituloSec.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXCapituloSec
        [ExpedienteDigitalModel.Store.PersonaXCapituloSec](T1.[PersonaXCapituloSec.id_persona], T1.[PersonaXCapituloSec.id_capitulo], T1.PersonaXCapituloSec_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXCapituloSec.id_persona], 
            T.id_capitulo AS [PersonaXCapituloSec.id_capitulo], 
            T.distribucionAutoria AS PersonaXCapituloSec_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXCapituloSecs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXCapituloSecs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXCapituloSecs
        [ExpedienteDigitalModel.PersonaXCapituloSec](T1.[PersonaXCapituloSec.id_persona], T1.[PersonaXCapituloSec.id_capitulo], T1.PersonaXCapituloSec_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXCapituloSec.id_persona], 
            T.id_capitulo AS [PersonaXCapituloSec.id_capitulo], 
            T.distribucionAutoria AS PersonaXCapituloSec_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXCapituloSec AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.PersonaXObraDeArtistica.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraDeArtistica
        [ExpedienteDigitalModel.Store.PersonaXObraDeArtistica](T1.[PersonaXObraDeArtistica.id_persona], T1.[PersonaXObraDeArtistica.id_obra_artistica], T1.PersonaXObraDeArtistica_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraDeArtistica.id_persona], 
            T.id_obra_artistica AS [PersonaXObraDeArtistica.id_obra_artistica], 
            T.distribucionAutoria AS PersonaXObraDeArtistica_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalEntities.PersonaXObraDeArtisticas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.PersonaXObraDeArtisticas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonaXObraDeArtisticas
        [ExpedienteDigitalModel.PersonaXObraDeArtistica](T1.[PersonaXObraDeArtistica.id_persona], T1.[PersonaXObraDeArtistica.id_obra_artistica], T1.PersonaXObraDeArtistica_distribucionAutoria)
    FROM (
        SELECT 
            T.id_persona AS [PersonaXObraDeArtistica.id_persona], 
            T.id_obra_artistica AS [PersonaXObraDeArtistica.id_obra_artistica], 
            T.distribucionAutoria AS PersonaXObraDeArtistica_distribucionAutoria, 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.PersonaXObraDeArtistica AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalModelStoreContainer.DocumentoProyectoGraduacion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoProyectoGraduacion
        [ExpedienteDigitalModel.Store.DocumentoProyectoGraduacion](T1.DocumentoProyectoGraduacion_ID, T1.DocumentoProyectoGraduacion_RootDirectory, T1.DocumentoProyectoGraduacion_FileName, T1.DocumentoProyectoGraduacion_FileAttribute, T1.DocumentoProyectoGraduacion_FileCreateDate, T1.DocumentoProyectoGraduacion_FileSize, T1.DocumentoProyectoGraduacion_FileStreamCol, T1.[DocumentoProyectoGraduacion.id_proyecto])
    FROM (
        SELECT 
            T.ID AS DocumentoProyectoGraduacion_ID, 
            T.RootDirectory AS DocumentoProyectoGraduacion_RootDirectory, 
            T.FileName AS DocumentoProyectoGraduacion_FileName, 
            T.FileAttribute AS DocumentoProyectoGraduacion_FileAttribute, 
            T.FileCreateDate AS DocumentoProyectoGraduacion_FileCreateDate, 
            T.FileSize AS DocumentoProyectoGraduacion_FileSize, 
            T.FileStreamCol AS DocumentoProyectoGraduacion_FileStreamCol, 
            T.id_proyecto AS [DocumentoProyectoGraduacion.id_proyecto], 
            True AS _from0
        FROM ExpedienteDigitalEntities.DocumentoProyectoGraduacions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ExpedienteDigitalEntities.DocumentoProyectoGraduacions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DocumentoProyectoGraduacions
        [ExpedienteDigitalModel.DocumentoProyectoGraduacion](T1.DocumentoProyectoGraduacion_ID, T1.DocumentoProyectoGraduacion_RootDirectory, T1.DocumentoProyectoGraduacion_FileName, T1.DocumentoProyectoGraduacion_FileAttribute, T1.DocumentoProyectoGraduacion_FileCreateDate, T1.DocumentoProyectoGraduacion_FileSize, T1.DocumentoProyectoGraduacion_FileStreamCol, T1.[DocumentoProyectoGraduacion.id_proyecto])
    FROM (
        SELECT 
            T.ID AS DocumentoProyectoGraduacion_ID, 
            T.RootDirectory AS DocumentoProyectoGraduacion_RootDirectory, 
            T.FileName AS DocumentoProyectoGraduacion_FileName, 
            T.FileAttribute AS DocumentoProyectoGraduacion_FileAttribute, 
            T.FileCreateDate AS DocumentoProyectoGraduacion_FileCreateDate, 
            T.FileSize AS DocumentoProyectoGraduacion_FileSize, 
            T.FileStreamCol AS DocumentoProyectoGraduacion_FileStreamCol, 
            T.id_proyecto AS [DocumentoProyectoGraduacion.id_proyecto], 
            True AS _from0
        FROM ExpedienteDigitalModelStoreContainer.DocumentoProyectoGraduacion AS T
    ) AS T1");
        }
    }
}
